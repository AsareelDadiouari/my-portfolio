{"version":3,"sources":["img/settings.png","img/polyquiz.png","img/Birdstagram.png","components/Header.tsx","components/Footer.tsx","components/Skills.tsx","components/Work.tsx","pages/Home/Landing.tsx","pages/About/About.tsx","pages/Projects/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","props","ref","reference","className","to","onClick","homeClick","projectClick","aboutClick","url","newWindow","window","open","opener","openInTab","height","src","alt","title","target","rel","href","fontSize","referenceArrow","Footer","Skills","id","style","fontWeight","Work","Table","striped","bordered","hover","size","require","width","Button","type","Landing","headerRef","React","useRef","aboutRef","projectRef","useState","setHomeClick","setProjectClick","setAboutClick","scrollTop","setScrollTop","useEffect","current","scrollIntoView","behavior","addEventListener","pageYOffset","About","Projects","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.233ccde8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.92a9fced.png\";","module.exports = __webpack_public_path__ + \"static/media/polyquiz.dd4cfdd0.png\";","module.exports = __webpack_public_path__ + \"static/media/Birdstagram.d7d73f61.png\";","import React, {Fragment, Props} from 'react';\nimport './Header.css'\nimport {FaArrowDown, FaArrowUp, FaLinkedinIn, FaMailBulk} from \"react-icons/fa\"\nimport {Link} from 'react-router-dom'\n\nconst Header = (props: any) => {\n    const openInTab = (url: string): void => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    return (\n        <Fragment>\n            <div ref={props.reference} className='container-fluid Banner'>\n                <p className='Name' > Asar√©el DADIOUARI </p>\n                <div className='NavBar'>\n                    <Link to='/'>\n                        <p onClick={() => props.homeClick(true)} className='NavBarElement'>Home</p>\n                    </Link>\n                    <Link to='/'>\n                        <p onClick={() => props.projectClick(true)} className='NavBarElement'>Projects</p>\n                    </Link>\n                    <Link to='/'>\n                        <p onClick={() => props.aboutClick(true)} className='NavBarElement'>About</p>\n                    </Link>\n                </div>\n            </div>\n            <div className='Header-Content'>\n                <p className='display-3 text-center Header-Statement'> MSc. CS student at <br/>\n                    <span className='Uqac-link' onClick={() => openInTab('https://www.uqac.ca')}>\n                        <img height=\"100px\" className='Uqac-logo'\n                             src='https://www.uqac.ca/wp-content/themes/uqac/assets/images/uqac.svg'\n                             alt='Logo'/>\n                    </span>\n                </p>\n                <div className=\"container row\">\n                    <a title='Linkedin' target='_blank' rel=\"noopener noreferrer\"\n                       href='https://www.linkedin.com/in/yiemboiro-asar%C3%A9el-dadiouari-9ab235174/'> <FaLinkedinIn\n                        className='linkedin-logo' fontSize=\"35px\"/> </a>\n                </div>\n                <div className=\"container row\">\n                    <a title='Email' href='mailto:asareel.y.dadiouari@gmail.com'> <FaMailBulk className='email-logo'\n                        fontSize=\"35px\"/> \n                    </a>\n                </div>\n                <span onClick={() => props.aboutClick(true)} ref={props.referenceArrow}>\n                    <FaArrowDown href='#id' className='arrow-down' fontSize=\"50px\"/>\n                </span>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css'\nimport {FaLinkedinIn, FaMailBulk} from \"react-icons/fa\";\n\nconst Footer = () => {\n    return (\n        <div className=\"container-fluid Footer\">\n            <div className=\"container text-center intouch\">\n                <p className=' text-white intouchtext'>Stay in touch with me</p>\n                <a title='Linkedin' target='_blank' rel=\"noopener noreferrer\"\n                   href='https://www.linkedin.com/in/asareel-y-dadiouari/'> <FaLinkedinIn\n                    className='linkedin-logo' fontSize=\"35px\"/> </a>\n                <a title='Email' href='mailto:asareel.y.dadiouari@gmail.com'> <FaMailBulk className='email-logo'\n                                                                                          fontSize=\"35px\"/> </a>\n            </div>\n\n            <div className=\"container-fluid mx-auto Footer-navBar\">\n                <p className=\"Footer-navBar-element\">Home</p>\n                <p className=\"Footer-navBar-element\">Contact</p>\n                <p className=\"Footer-navBar-element\">Projects</p>\n                <p className=\"Footer-navBar-element\">About</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport './Skills.css'\n\nconst Skills = (props: any) => {\n    const openInTab = (url: string): void => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    return (\n        <div className='container-fluid skills'>\n            <div className='container'>\n                <p id=\"id\" \n                className=' title-about-me' \n                ref={props.reference}>\n                    About Me\n                </p>\n                <p className='description'>Hello I'm Asar√©el <b>/(Asareel)/ </b>, a student pursuing\n                     a master degree in computer science at <span className='link-design' onClick={() => openInTab(\"https://www.uqac.ca\")}>UQAC</span> (Saguenay, Quebec) who\n                    previously worked mostly\n                    through class projects with web frameworks and libraries like Angular and React. I have a 3 month\n                    intership experience at a startup, and another work experience where I was hired as a freelance web developer for 4 month.\n                    You can find my comptlete and detailed resume on my <span className='link-design' onClick={() => openInTab('https://www.linkedin.com/in/asareel-y-dadiouari/')}>Linkedin</span>. <br/> Thank you for reading !\n                </p>\n                <p className=' title-skills'>Skills</p>\n                <div className='skills-set'>\n                    <p className=\"languages\">Frontend: React, Angular, VueJs</p>\n                    <p className=\"languages\">Backend: Node.js (Express), ASP .Net Core </p>\n                    <p className=\"languages\">Programming: Javascript, Typescript, C#, Java, Python </p>\n                    <p className=\"languages\">Databases: MongoDB, MySQL</p>\n                    <p className=\"languages\">Other: Git, IntelliJ, Rider, WebStorm, Android Studio, Visual Studio / Code</p>\n                </div>\n                <p className=' title-skills'>Work Experience</p>\n                <div className='skills-set'>\n                    <p className=\"languages\">\n                        <span style={{fontWeight: \"bold\"}}>Leap careers, Web developer - freelance </span> <br/>\n                        Jan 2022 - Apr 2022 <br/>\n\n                        ‚Ä¢ Migrated to the version 2.0 of the current platform from React to Angular (improved website \n                        responsiveness, support for different mobile formats, bug fixes). <br/>\n                        ‚Ä¢ Implemented new functionalities on the mobile application (push notifications, chats‚Ä¶). <br/>\n                        ‚Ä¢ Deployment with AWS. <br/>\n                        Stack: Angular, Ionic, Amplify, Route 53, Lambda, GoDaddy\n\n                    </p>\n                    <p className=\"languages\">\n                        <span  style={{fontWeight: \"bold\"}}>wever, Full stack Developer Intern </span> <br/>\n                        Jun 2021 - Aug 2021 <br/>\n\n                        ‚Ä¢ Worked in a team of 3 to implement new modules to the company\\‚Äôs main product and helped \n                        reduce code redundancy. <br/>\n                        ‚Ä¢ Implemented an internal chat system that permits account managers to discuss with their clients. <br/>\n                        Stack: ReactJs, Docker, GitLab, Symphony 5, PHP \n                    </p>\n                </div>\n            </div>\n            <div>\n                {\n                    /*\n                                <iframe src=\"https://www.slideshare.net/slideshow/embed_code/key/4WJBXVR7XE0uX3?hostedIn=slideshare&page=upload\" width=\"476\" height=\"400\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n                    */\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Skills;\n","import React,  { useEffect } from 'react';\nimport './Work.css'\nimport {Button, Table} from 'react-bootstrap'\n\nconst Work = (props: any) => {\n    const openInTab = (url: string): void => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    return (\n        <div className=\"container Work\">\n            <p className=\"my-top-projects\" ref={props.reference}>Projects</p>\n            <Table className='Table' striped bordered hover size=\"sm\">\n                <thead>\n                <tr>\n                    <th>Project Name</th>\n                    <th>Description</th>\n                    <th>Languages</th>\n                </tr>\n                </thead>\n\n                <tbody>\n                <tr>\n                    <td>\n                        <a href='https://github.com/AsareelDadiouari/Lets-go-biking'> Let's Go biking </a>\n                        <img className='LetGoBiking' height={150} alt='LetGoBiking'\n                             src=\"https://camo.githubusercontent.com/12ce27f16c5680b3ccf607b71a4db5ab5e0c44a77addfc5517f98b9f7d7bbded/68747470733a2f2f692e696d6775722e636f6d2f736b576c33395a2e706e67\"\n                        />\n                    </td>\n                    <td>\n                        A Web And Desktop application that allows get directions from one place to another using JCDecaux Bikes.\n                    </td>\n                    <td>.Net Framework, WCF, ReactJs, WPF.</td>\n                </tr>\n                </tbody>\n\n                <tbody>\n                <tr>\n                    <td>\n                        <a href='https://github.com/AsareelDadiouari/PS7-PolyVilleActive'> Poly Ville Active </a>\n                        <img className='PolyVilleActive' height={500} alt='PolyVilleActive'\n                             src=\"https://camo.githubusercontent.com/b6ccde0660b3a99717509fcb7e033c489fbba40b9e8f43b36b5a2a1ffee3f77b/68747470733a2f2f692e696d6775722e636f6d2f6746616f6e4a482e676966\"\n                        />\n                    </td>\n                    <td>Created in a group of 4, a web platform aimed to provide a ‚ÄúGuide‚Äù for different actors (tourists, \n                        merchants, etc.) of a fictional city, PolyVille.\n                    </td>\n                    <td>JENA Fuseki, Spring Boot, VueJs, RDF/SPARQL.</td>\n                </tr>\n                </tbody>\n\n                <tbody>\n                <tr>\n                    <td>\n                        <a href='https://github.com/2019-2020-ps6/2019-2020-ps6-rendu-triangular'> PolyQuiz </a>\n                        <img className='Polyquiz'\n                             src={require('../img/polyquiz.png')}\n                             width={711} alt='Polyquiz'/>\n                    </td>\n                    <td>A website with Angular which allows to configure a quiz adapted to aging people having\n                        difficulties\n                        to use a computer tool\n                    </td>\n                    <td>Typescript, Javascript, HTML5, CSS3</td>\n                </tr>\n\n                </tbody>\n\n                <tbody>\n                <tr>\n                    <td>\n                        <a href='https://github.com/laudienp/special-garbanzo'> Birdstagram </a>\n                        <img className='Birdstagram' height={500} alt='Birdstagram'\n                             src={require('../img/Birdstagram.png')}\n                        />\n                    </td>\n                    <td>A mobile application for monitoring the presence and / or migration of birds by means of user\n                        signals\n                    </td>\n                    <td>Java</td>\n                </tr>\n                </tbody>\n\n            </Table>\n            <Button type='button' onClick={() => openInTab('https://github.com/AsareelDadiouari?tab=repositories')}> See Github Repo</Button>\n            <Button type='button' onClick={() => openInTab('https://drive.google.com/file/d/1ZZ1dvSS3yUbxu5VypzBQJv1eKSz_XoUl/view?usp=sharing')}> English resume</Button>\n            <Button type='button' onClick={() => openInTab('https://drive.google.com/file/d/1IfVHiTusJe6JaOnewOJADopRbRE1F9J8/view?usp=sharing')} > French resume</Button>\n\n        </div>\n    );\n};\n\nexport default Work;\n","import React, {Component, useEffect, useState} from 'react';\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Skills from \"../../components/Skills\";\nimport Work from \"../../components/Work\";\nimport './Landing.css'\nimport { FaArrowUp } from 'react-icons/fa';\n\nconst Landing = () => {\n    const headerRef = React.useRef<HTMLDivElement>(null);\n    const aboutRef = React.useRef<HTMLDivElement>(null);\n    const projectRef = React.useRef<HTMLDivElement>(null);\n\n    const [homeClick, setHomeClick] = useState(false);\n    const [projectClick, setProjectClick] = useState(false);\n    const [aboutClick, setAboutClick] = useState(false);\n\n    const [scrollTop, setScrollTop] = useState(false);\n\n    useEffect(() => {\n        if(homeClick){\n            headerRef.current?.scrollIntoView({behavior: \"smooth\"});\n            setHomeClick(false);\n        }\n\n        if(projectClick){\n            projectRef.current?.scrollIntoView({ behavior: \"smooth\" });\n            setProjectClick(false)\n        }\n\n        if(aboutClick){\n            aboutRef.current?.scrollIntoView({ behavior: \"smooth\" });\n            setAboutClick(false)\n        }\n\n        window.addEventListener(\"scroll\", () => {\n            if (window.pageYOffset > 300)\n                setScrollTop(true);\n            else\n                setScrollTop(false);\n        });\n\n    });\n\n    return (\n        <div>\n        <Header reference={headerRef}\n                referenceArrow={aboutRef}\n                homeClick={setHomeClick}\n                projectClick={setProjectClick}\n                aboutClick={setAboutClick}/>\n\n        <Skills reference={aboutRef}/> {/* About me, Work Experience */}\n        <Work reference={projectRef}/> {/* Projects */}\n        <Footer/>\n        {\n            scrollTop && \n            <FaArrowUp href='#id' onClick={() => setHomeClick(true)} className='arrow-up' fontSize=\"50px\"/>\n        }\n        </div>\n    )\n}\n\nexport default Landing;\n","import React from 'react';\nimport './About.css'\n\nconst About = () => {\n    return (\n        <div>\n            <img className=\"progress-about\" src={require('../../img/settings.png')} alt=\"\" width=\"120\" height=\"120\"/>\n            <h1>In Progress</h1>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport './Projects.css'\n\nconst Projects = () => {\n    return (\n        <div>\n            <img className=\"progress-project\" src={require('../../img/settings.png')} alt=\"\" width=\"120\" height=\"120\"/>\n            <h1>In Progress</h1>\n        </div>\n    );\n};\n\nexport default Projects;\n","import React from 'react';\nimport './App.css';\nimport Landing from \"./pages/Home/Landing\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport About from \"./pages/About/About\";\nimport Projects from \"./pages/Projects/Projects\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path='/About' component={About}/>\n                    <Route exact path='/Projects' component={Projects}/>\n                    <Route exact path='/' component={Landing}/>\n                </Switch>\n            </BrowserRouter>\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}